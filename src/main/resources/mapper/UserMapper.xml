<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cholong.cholong_be.api.common.mapper.UserMapper">
    <select id="getUserList" parameterType="userVO" resultType="userVO">
        SELECT
            IDX,
            USER_ID,
            PASSWORD,
            KOR_NAME,
            ENG_NAME,
            NICK_NAME,
            ZIP_CODE,
            ADDRESS,
            ADDRESS_DTL,
            DECODE(GENDER, '1', '남자', '2', '여자') AS GENDER,
            BIRTHDAY,
            PHONE_NUM,
            EMAIL,
            USE_YN,
            FILE_NO,
            REMARK,
            SMS_YN,
            MAIL_YN,
            CREATE_USER,
            UPDATE_DATE,
            UPDATE_USER,
            TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
        FROM USER_INFO
        <where>
            <if test="idx != null and idx != ''">
                AND IDX = #{idx}
            </if>
            <if test="userId != null and userId != ''">
                AND USER_ID = #{userId}
            </if>
            <if test="email != null and email != ''">
                AND EMAIL = #{email}
            </if>
            <if test="korName != null and korName != ''">
                AND KOR_NAME = #{korName}
            </if>
        </where>
    </select>

    <select id="getUser" parameterType="userVO" resultType="userVO">
        SELECT
            IDX,
            USER_ID,
            PASSWORD,
            KOR_NAME,
            ENG_NAME,
            NICK_NAME,
            ZIP_CODE,
            ADDRESS,
            ADDRESS_DTL,
            GENDER,
            BIRTHDAY,
            PHONE_NUM,
            EMAIL,
            USE_YN,
            FILE_NO,
            REMARK,
            SMS_YN,
            MAIL_YN,
            CREATE_USER,
            UPDATE_DATE,
            UPDATE_USER,
            CREATE_DATE
        FROM USER_INFO
        <where>
            <if test="idx != null and idx != ''">
                AND IDX = #{idx}
            </if>
            <if test="userId != null and userId != ''">
                AND USER_ID = #{userId}
            </if>
            <if test="email != null and email != ''">
                AND EMAIL = #{email}
            </if>
            <if test="korName != null and korName != ''">
                AND KOR_NAME = #{korName}
            </if>
        </where>
    </select>

    <insert id="addUser" parameterType="userVO">
        INSERT
        INTO    USER_INFO
        (
            IDX,
            USER_ID,
            PASSWORD,
            KOR_NAME,
            NICK_NAME,
            ZIP_CODE,
            ADDRESS,
            ADDRESS_DTL,
            GENDER,
            BIRTHDAY,
            PHONE_NUM,
            EMAIL,
            USE_YN,
            FILE_NO,
            SMS_YN,
            MAIL_YN,
            CREATE_DATE
            <if test="createUser != null and idx != ''">
                ,CREATE_USER
            </if>
        )
        VALUES
        (
            USER_INFO_SEQ.NEXTVAL,
            #{userId},
            #{password},
            #{korName},
            #{nickName},
            #{zipCode},
            #{address},
            #{addressDtl},
            #{gender},
            TO_CHAR(TO_DATE(#{birthday}, 'YYYY-MM-DD'), 'YYYYMMDD'),
            #{phoneNum},
            #{email},
            'Y',
            #{fileNo},
            #{smsYn},
            #{mailYn},
            SYSDATE
            <if test="createUser != null and idx != ''">
                ,#{createUser}
            </if>
        )
    </insert>

    <update id="updateUser" parameterType="userVO">
        UPDATE  USER_INFO
        SET     PASSWORD = #{password},
                KOR_NAME = #{korName},
                ENG_NAME = #{engName},
                NICK_NAME = #{nickName},
                ZIP_CODE = #{zipCode},
                ADDRESS = #{address},
                ADDRESS_DTL = #{addressDtl},
                GENDER = #{gender},
                BIRTHDAY = #{birthDay},
                PHONE_NUM = #{phoneNum},
                EMAIL = #{email},
                USE_YN = #{useYN},
                FILE_NO = #{fileNo},
                REMARK = #{remark},
                UPDATE_USER = #{updateUser},
                UPDATE_DATE = SYSDATE
        <where>
            <if test="idx != null and idx != ''">
                AND IDX = #{idx}
            </if>
            <if test="userId != null and userId != ''">
                AND USER_ID = #{userId}
            </if>
        </where>
    </update>

    <delete id="deleteUser" parameterType="java.util.ArrayList">
        DELETE
        FROM    USER_INFO
        WHERE   IDX IN
        <foreach item="item" collection="deleteList" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <select id="userIdDuplicateChk" parameterType="String" resultType="int">
        SELECT
            COUNT(*) AS CNT
        FROM    USER_INFO
        WHERE   USER_ID = #{userId}
    </select>

    <select id="getPassword" parameterType="String" resultType="String">
        SELECT
            PASSWORD
        FROM    USER_INFO
        WHERE   USER_ID = #{userId}
    </select>

    <select id="getId" parameterType="userVO" resultType="String">
        SELECT
            USER_ID
        FROM    USER_INFO
        WHERE   KOR_NAME = #{korName}
        AND     EMAIL = #{email}
    </select>

    <update id="updatePassword" parameterType="userVO">
        UPDATE  USER_INFO
        SET     PASSWORD = #{password},
                UPDATE_USER = 'ADMIN',
                UPDATE_DATE = SYSDATE
        <where>
            <if test="idx != null and idx != ''">
                AND IDX = #{idx}
            </if>
            <if test="userId != null and userId != ''">
                AND USER_ID = #{userId}
            </if>
        </where>
    </update>
</mapper>